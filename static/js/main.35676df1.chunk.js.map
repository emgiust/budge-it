{"version":3,"sources":["layout/Header.js","pages/About.js","context.js","components/ExpenseRow.js","components/ExpenseTable.js","layout/TextInputGroup.js","layout/TextInputMoney.js","components/AddExpense.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","About","Context","React","createContext","reducer","state","action","type","Object","objectSpread","records","filter","record","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","date","description","amount","dispatch","setState","inherits","createClass","key","value","props","children","Component","Consumer","ExpenseRow","onDeleteClick","_this2","_this$props$record","Fragment","onClick","bind","style","cursor","color","ExpenseTable","listItems","map","components_ExpenseRow","scope","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","TextInputMoney","number_format_default","thousandSeparator","prefix","AddExpense","errors","onSubmit","e","preventDefault","_this$state","uuid","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","layout_TextInputMoney","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35676df1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-success mb-3 py-0\">\n      <div className=\"container\">\n        <h1 className=\"navbar-brand\">+Expense Tracker+</h1>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/expense/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_RECORD':\n      return {\n        ...state,\n        records: state.records.filter(record => record.id !== action.payload)\n      };\n    case 'ADD_RECORD':\n      return {\n        ...state,\n        records: [action.payload, ...state.records]\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    records: [\n      {\n        id: 1,\n        date: '2019-01-01',\n        description: 'Rent',\n        amount: '$625'\n      },\n      {\n        id: 2,\n        date: '2018-12-05',\n        description: 'Fuel',\n        amount: '$33'\n      },\n      {\n        id: 3,\n        date: '2018-12-23',\n        description: 'AirBnb',\n        amount: '$234'\n      },\n      {\n        id: 4,\n        date: '2018-12-14',\n        description: 'Cat food',\n        amount: '$6'\n      }\n    ],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Consumer } from '../context';\n\nclass ExpenseRow extends Component {\n  onDeleteClick = (id, dispatch) => {\n    dispatch({ type: 'DELETE_RECORD', payload: id });\n  };\n\n  render() {\n    const { id, date, description, amount } = this.props.record;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <React.Fragment>\n              <tr>\n                <td>{date}</td>\n                <td>{description}</td>\n                <td>{amount}</td>\n                <td>\n                  <i\n                    className=\"fas fa-times\"\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                    style={{ cursor: 'pointer', color: 'red' }}\n                  />\n                </td>\n              </tr>\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default ExpenseRow;\n","import React, { Component } from 'react';\nimport ExpenseRow from './ExpenseRow';\nimport { Consumer } from '../context';\n\nclass ExpenseTable extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { records } = value;\n\n          const listItems = records.map(record => (\n            <ExpenseRow key={record.id} record={record} />\n          ));\n\n          return (\n            <table className=\"table mt-2 table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">\n                    <h4>Date</h4>\n                  </th>\n                  <th scope=\"col\">\n                    <h4>Description</h4>\n                  </th>\n                  <th scope=\"col\">\n                    <h4>Amount</h4>\n                  </th>\n                  <th scope=\"col\" />\n                </tr>\n              </thead>\n              <tbody>{listItems}</tbody>\n            </table>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default ExpenseTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n//bring in props as a parameter on the functional\n//component\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeHolder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\n//makes the default prop for the type value equal text\n//type: text\n//most of these input types are text except email\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n//bring in props as a parameter on the functional\n//component\nconst TextInputMoney = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <NumberFormat\n        thousandSeparator={true}\n        prefix={'$'}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputMoney.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeHolder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\n//makes the default prop for the type value equal text\n//type: text\n//most of these input types are text except email\nTextInputMoney.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputMoney;\n","import React, { Component } from 'react';\nimport { Consumer } from '../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport TextInputMoney from '../layout/TextInputMoney';\nimport uuid from 'uuid';\n\nclass AddExpense extends Component {\n  state = {\n    date: '',\n    description: '',\n    amount: '',\n    errors: {}\n  };\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n\n    const { date, description, amount } = this.state;\n\n    //check for errors\n    if (date === '') {\n      this.setState({ errors: { date: 'Date is required' } });\n      return;\n    }\n\n    if (description === '') {\n      this.setState({ errors: { description: 'Description is required' } });\n      return;\n    }\n\n    if (amount === '') {\n      this.setState({ errors: { amount: 'Amount is required' } });\n      return;\n    }\n\n    const newRecord = {\n      id: uuid(),\n      date,\n      description,\n      amount\n    };\n\n    dispatch({ type: 'ADD_RECORD', payload: newRecord });\n\n    //clear state\n    this.setState({\n      date: '',\n      description: '',\n      amount: '',\n      errors: {}\n    });\n\n    //redirect\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { date, description, amount, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Expense</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Date\"\n                    name=\"date\"\n                    type=\"date\"\n                    placeholder=\"\"\n                    value={date}\n                    onChange={this.onChange}\n                    error={errors.date}\n                  />\n                  <TextInputGroup\n                    label=\"Description\"\n                    name=\"description\"\n                    placeholder=\"Description..\"\n                    value={description}\n                    onChange={this.onChange}\n                    error={errors.description}\n                  />\n                  <TextInputMoney\n                    label=\"Amount\"\n                    name=\"amount\"\n                    placeholder=\"Amount..\"\n                    value={amount}\n                    onChange={this.onChange}\n                    error={errors.amount}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Expense\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddExpense;\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry that page does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './layout/Header';\nimport About from './pages/About';\nimport ExpenseTable from './components/ExpenseTable';\nimport AddExpense from './components/AddExpense';\nimport NotFound from './pages/NotFound';\n\nimport { Provider } from './context';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"m-5\">\n              <div className=\"row\">\n                <div className=\"col-xl mt-2\">\n                  <Switch>\n                    <Route exact path=\"/\" component={ExpenseTable} />\n                    <Route exact path=\"/expense/add\" component={AddExpense} />\n                    <Route exact path=\"/about\" component={About} />\n                    <Route component={NotFound} />\n                  </Switch>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}